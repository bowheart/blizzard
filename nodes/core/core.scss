@import 'https://fonts.googleapis.com/css?family=Open+Sans:400,700,300';
@import 'config';

// Variables / Functions / Setup-type-stuff

@mixin input() {
	background: #fff;
	border: 1px solid #ddd;
	border-radius: 3px;
	display: block;
	font-size: 1.5rem;
	margin-top: 1.5rem;
	margin-bottom: 1.5rem;
	padding: 0.3rem 0.6rem;
	width: 100%;
	
	&:focus {
		border-color: #0ff;
		box-shadow: 0 0 1px 1px #0ff;
	}
}

@mixin pseudo-effects($bg, $color) {
	&:hover, &:focus {
		background: darken($bg, 5%);
		color: $color;
	}
	&:active {
		background: darken($bg, 10%);
		color: $color;
	}
}

@mixin standard-margins() {
	margin-top: 1.4rem;
	margin-bottom: 0.6rem;
}




// CSS Reset (of sorts)

* {
	box-sizing: border-box;
	line-height: 1.45;
}

html {
	font-size: $baseRootFontSize;
	
	$rootFontSizePieceSize: ($baseRootFontSize - $smallestRootFontSize) / length($mqs);
	@each $mq in $mqs {
		$i: index($mqs, $mq);
		
		@media (max-width: $mq) {
			font-size: $baseRootFontSize - $rootFontSizePieceSize * $i;
		}
	}
}

body {
	color: #333;
	font-family: nth($fonts, 1);
	font-size: 1.5rem;
	margin: 0;
}



// Alphabetized selectors
a {
	color: nth($text-colors, 1);
	cursor: pointer;
	display: inline-block;
	text-decoration: none;
	
	&:hover {
		color: darken(nth($text-colors, 1), 20%);
	}
}

article, figure, footer, header, main, section {
	display: block;
}

button, .btn {
	background: #fff;
	border: 1px solid #ccc;
	color: currentColor;
	cursor: pointer;
	display: inline-block;
	font-size: 1.5rem;
	padding: 0.4em 0.7em;
	user-select: none; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none;
	vertical-align: middle;
	@include pseudo-effects(#fff, currentColor);
	
	@each $color in $button-colors {
		$i: index($button-colors, $color);
		
		&.btn-#{$i} {
			background: $color;
			border: 1px solid $color;
			color: #fff;
			@include pseudo-effects($color, #fff);
		}
	}
}

em, .em {
	font-style: italic;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: 400;
	line-height: 1;
}
@for $i from 1 through 6 {
	h#{$i} {
		font-size: #{5.5 - ($i * 0.5)}rem;
		
		&:not(.padded):not(.bare) {
			margin-top: #{4.8 - ($i * 0.3)}rem;
			margin-bottom: #{3 - ($i * 0.3)}rem;
		}
		&.padded {
			margin-top: 0;
			margin-bottom: 0;
			padding-top: #{3.4 - ($i * 0.3)}rem;
			padding-bottom: #{3.4 - ($i * 0.3)}rem;
		}
	}
}

hr {
	background: #ccc;
	border: none;
	height: 1px;
	margin-top: 1.5rem;
	margin-bottom: 1.5rem;
	
	&.fade {
		background: linear-gradient(90deg, transparent, #ccc 30%, #ccc 70%, transparent);
	}
}

input {
	@include input();
	
	[type="date"], [type="email"], [type="number"], [type="password"], [type="tel"], [type="text"], [type="url"] {
		@include input();
	}
}

label.row {
	cursor: pointer;
	
	&:not(.bare) {
		padding-top: 0.7rem;
		padding-bottom: 0.7rem;
	}
	> span, > input, > select {
		margin-top: 0;
		margin-bottom: 0;
		vertical-align: middle;
	}
}

ol {
	list-style-position: inside;
	padding-left: 1.5rem;
	@include standard-margins();
}

p {
	&:not(.bare) {
		@include standard-margins();
	}
}

select {
	cursor: pointer;
	@include input();
}

strong, .strong {
	font-weight: bold;
}

textarea {
	resize: vertical;
	@include input();
}

ul {
	list-style-type: none;
	margin-top: 0;
	margin-bottom: 0;
	padding-left: 0;
	
	&.styled {
		list-style: circle inside;
		padding-left: 1.5rem;
	}
}



// Basic Layout Classes
@for $i from 1 through 10 {
	.push-#{$i} {
		margin: #{$i / 2}rem;
	}
	.push-col-#{$i} {
		margin-right: #{$i / 2}rem;
		margin-left: #{$i / 2}rem;
	}
	.push-row-#{$i} {
		margin-top: #{$i / 2}rem;
		margin-bottom: #{$i / 2}rem;
	}
	.push-top-#{$i} {
		margin-top: #{$i / 2}rem;
	}
	.push-right-#{$i} {
		margin-right: #{$i / 2}rem;
	}
	.push-bottom-#{$i} {
		margin-bottom: #{$i / 2}rem;
	}
	.push-left-#{$i} {
		margin-left: #{$i / 2}rem;
	}
	
	
	.container-#{$i} {
		margin-right: auto;
		margin-left: auto;
		max-width: 100%;
		width: #{$i * ($i / 3) * 15}rem;
	}
	
	
	.pad-#{$i} {
		padding: #{$i / 2}rem;
	}
	.pad-col-#{$i} {
		padding-left: #{$i / 2}rem;
		padding-right: #{$i / 2}rem;
	}
	.pad-row-#{$i} {
		padding-top: #{$i / 2}rem;
		padding-bottom: #{$i / 2}rem;
	}
	.pad-top-#{$i} {
		padding-top: #{$i / 2}rem;
	}
	.pad-right-#{$i} {
		padding-right: #{$i / 2}rem;
	}
	.pad-bottom-#{$i} {
		padding-bottom: #{$i / 2}rem;
	}
	.pad-left-#{$i} {
		padding-left: #{$i / 2}rem;
	}
	
	
	.modal-#{$i} {
		border-radius: 10px;
		max-width: 100%;
		width: #{$i * 20}rem;
	}
	
	.text-#{$i} {
		font-size: #{0.6 + (0.3 * $i)}rem;
	}
}



// The Grid
.row {
	display: block;
	letter-spacing: -1em;
	width: 100%;
	
	> *:not(.row) {
		letter-spacing: 0;
	}
}

$oneTwentyFourth: 100 / 24;
@each $mq in $mqs {
	$i: index($mqs, $mq);
	$mq: nth($mqs, length($mqs) - $i + 1);
	
	@for $j from 24 through 1 {
		.col-#{$i}-#{$j} {
			@media (min-width: $mq + 1) {
				display: inline-block;
				vertical-align: top;
				width: #{$oneTwentyFourth * $j + 0%};
			}
		}
		.col-push-#{$i}-#{$j} {
			@media (min-width: $mq + 1) {
				margin-left: #{$oneTwentyFourth * $j + 0%};
			}
		}
	}
}



// Utility Classes
@each $bg-color in $bg-colors {
	$i: index($bg-colors, $bg-color);
	
	.bg-#{$i} {
		background: $bg-color;
		color: #fff;
	}
}

@each $text-color in $text-colors {
	$i: index($text-colors, $text-color);
	
	.color-#{$i} {
		color: $text-color;
	}
}

@each $mq in $mqs {
	$i: index($mqs, $mq);
	$mq: nth($mqs, length($mqs) - $i + 1);
	
	.screen-#{$i} {
		@media (max-width: $mq) {
			display: none;
		}
	}
}

.block {
	display: block;
	width: 100%;
}
.block-center {
	display: block;
	margin-right: auto;
	margin-left: auto;
}

.border {
	border: 1px solid #ccc;
}
.border-col {
	border-right: 1px solid #ccc;
	border-left: 1px solid #ccc;
}
.border-row {
	border-top: 1px solid #ccc;
	border-bottom: 1px solid #ccc;
}
.border-top {
	border-top: 1px solid #ccc;
}
.border-right {
	border-right: 1px solid #ccc;
}
.border-bottom {
	border-bottom: 1px solid #ccc;
}
.border-left {
	border-left: 1px solid #ccc;
}

.flex-page {
	display: flex;
}

.inline {
	display: inline-block;
}

.list-inline {
	> li {
		display: inline-block;
	}
}

.modal-wrapper {
	position: fixed;
	top: 0;
	left: 0;
	text-align: center;
	height: 100%;
	width: 100%;
	
	&::before {
		background: rgba(0, 0, 0, 0.2);
		content: '';
		position: absolute;
		top: -100%;
		left: -100%;
		height: 300%;
		width: 300%;
	}
	
	&::after {
		content: '';
		display: inline-block;
		height: 100%;
		vertical-align: middle;
	}
	
	> [class|="modal"] {
		background: #fff;
		display: inline-block;
		position: relative;
		vertical-align: middle;
	}
	
	.modal-head, .modal-body, .modal-foot {
		padding: 1.5rem;
	}
	.modal-head {
		text-align: center;
	}
	.modal-foot {
		text-align: right;
	}
}

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

.middle {
	vertical-align: middle;
	
	~ * {
		vertical-align: middle;
	}
}

.content-middle {
	> * {
		vertical-align: middle;
	}
	&:not(.row) {
		> * {
			display: inline-block;
		}
	}
	
	&::after {
		content: '';
		display: inline-block;
		vertical-align: middle;
		height: 100%;
	}
}
